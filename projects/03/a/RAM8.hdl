// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=r0In, b=r1In, c=r2In, d=r3In, e=r4In, f=r5In, g=r6In, h=r7In);
    Register(in=in, load=r0In, out=r0Out);
    Register(in=in, load=r1In, out=r1Out);
    Register(in=in, load=r2In, out=r2Out);
    Register(in=in, load=r3In, out=r3Out);
    Register(in=in, load=r4In, out=r4Out);
    Register(in=in, load=r5In, out=r5Out);
    Register(in=in, load=r6In, out=r6Out);
    Register(in=in, load=r7In, out=r7Out);
    Mux8Way16(a=r0Out, b=r1Out, c=r2Out, d=r3Out, e=r4Out, f=r5Out, g=r6Out, h=r7Out, sel=address, out=out);
}